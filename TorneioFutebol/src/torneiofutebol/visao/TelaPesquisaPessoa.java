/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package torneiofutebol.visao;

import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import torneiofutebol.modelo.Arbitro;
import torneiofutebol.modelo.ArbitroDAO;
import torneiofutebol.modelo.DAOFactory;
import torneiofutebol.modelo.Jogador;
import torneiofutebol.modelo.JogadorDAO;
import torneiofutebol.modelo.Pessoa;
import torneiofutebol.modelo.Tecnico;
import torneiofutebol.modelo.TecnicoDAO;

/**
 *
 * @author alexandre
 */
public class TelaPesquisaPessoa extends javax.swing.JFrame {

    /**
     * Creates new form TelaPesquisaPessoa
     */
    public TelaPesquisaPessoa() {
        initComponents();
        tListagem.setModel(new ModeloTabelaPessoa());
        tListagem.getColumnModel().getColumn(0).setPreferredWidth(250);
        tListagem.getColumnModel().getColumn(1).setPreferredWidth(40);
        tListagem.getColumnModel().getColumn(2).setPreferredWidth(25);
        tListagem.getColumnModel().getColumn(3).setPreferredWidth(120);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tListagem = new javax.swing.JTable();
        ckbRestringirNomes = new javax.swing.JCheckBox();
        tfNome = new javax.swing.JTextField();
        ckbRestringirDataNascimento = new javax.swing.JCheckBox();
        tfDataInicio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfDataFim = new javax.swing.JTextField();
        ckbRestringirSexo = new javax.swing.JCheckBox();
        cmbSexo = new javax.swing.JComboBox<>();
        bPesquisar = new javax.swing.JButton();
        ckbRestringirNacionalidade = new javax.swing.JCheckBox();
        tfNacionalidade = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisa pessoas");

        tListagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tListagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tListagemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tListagem);

        ckbRestringirNomes.setMnemonic('n');
        ckbRestringirNomes.setText("restringir nomes contendo");
        ckbRestringirNomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbRestringirNomesActionPerformed(evt);
            }
        });

        tfNome.setEnabled(false);

        ckbRestringirDataNascimento.setMnemonic('d');
        ckbRestringirDataNascimento.setText("restringir data de nascimento entre");
        ckbRestringirDataNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbRestringirDataNascimentoActionPerformed(evt);
            }
        });

        tfDataInicio.setEnabled(false);

        jLabel1.setText("e");

        tfDataFim.setEnabled(false);

        ckbRestringirSexo.setMnemonic('x');
        ckbRestringirSexo.setText("restringir sexo a");
        ckbRestringirSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbRestringirSexoActionPerformed(evt);
            }
        });

        cmbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Feminino" }));
        cmbSexo.setEnabled(false);

        bPesquisar.setMnemonic('P');
        bPesquisar.setText("Pesquisar");
        bPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPesquisarActionPerformed(evt);
            }
        });

        ckbRestringirNacionalidade.setText("restringir nacionalidade a");
        ckbRestringirNacionalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbRestringirNacionalidadeActionPerformed(evt);
            }
        });

        tfNacionalidade.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ckbRestringirNomes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfNome))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ckbRestringirSexo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckbRestringirDataNascimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ckbRestringirNacionalidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfNacionalidade)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addComponent(bPesquisar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbRestringirNomes)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbRestringirDataNascimento)
                    .addComponent(tfDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(tfDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbRestringirSexo)
                    .addComponent(cmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbRestringirNacionalidade)
                    .addComponent(tfNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPesquisar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ckbRestringirNomesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbRestringirNomesActionPerformed
        tfNome.setEnabled(ckbRestringirNomes.isSelected());
    }//GEN-LAST:event_ckbRestringirNomesActionPerformed

    private void ckbRestringirDataNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbRestringirDataNascimentoActionPerformed
        tfDataInicio.setEnabled(ckbRestringirDataNascimento.isSelected());
        tfDataFim.setEnabled(ckbRestringirDataNascimento.isSelected());
    }//GEN-LAST:event_ckbRestringirDataNascimentoActionPerformed

    private void ckbRestringirSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbRestringirSexoActionPerformed
        cmbSexo.setEnabled(ckbRestringirSexo.isSelected());
    }//GEN-LAST:event_ckbRestringirSexoActionPerformed

    private void ckbRestringirNacionalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbRestringirNacionalidadeActionPerformed
        tfNacionalidade.setEnabled(ckbRestringirNacionalidade.isSelected());
    }//GEN-LAST:event_ckbRestringirNacionalidadeActionPerformed

    private void bPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPesquisarActionPerformed
        ArrayList<Jogador> colecaoJogadores = new ArrayList<>();
        ArrayList<Tecnico> colecaoTecnicos = new ArrayList<>();
        ArrayList<Arbitro> colecaoArbitros = new ArrayList<>();
        
        String nome = "";
        Date dataInicio = new GregorianCalendar(1900, 0, 1).getTime();
        Date dataFim = new GregorianCalendar(2030, 0, 1).getTime();
        char sexo = ' ';
        String nacionalidade = "";
        
        if (ckbRestringirNomes.isSelected()) {
            nome = tfNome.getText();
        }
        if (ckbRestringirDataNascimento.isSelected()) {
            SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
            try {
                dataInicio = formatador.parse(tfDataInicio.getText());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(
                        null, 
                        "Data de início inválida", 
                        "Erro", 
                        JOptionPane.ERROR_MESSAGE);
                tfDataInicio.requestFocus();
                return;
            }
            try {
                dataFim = formatador.parse(tfDataFim.getText());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(
                        null, 
                        "Data de fim inválida", 
                        "Erro", 
                        JOptionPane.ERROR_MESSAGE);
                tfDataFim.requestFocus();
                return;
            }
        }
        if (ckbRestringirSexo.isSelected()) {
            sexo = cmbSexo.getSelectedIndex() == 0 ? 'M' : 'F';
        }
        if (ckbRestringirNacionalidade.isSelected()) {
            nacionalidade = tfNacionalidade.getText();
        }
        
        JogadorDAO jogadorDAO = DAOFactory.getDefaultDAOFactory().getJogadorDAO();
        TecnicoDAO tecnicoDAO = DAOFactory.getDefaultDAOFactory().getTecnicoDAO();
        ArbitroDAO arbitroDAO = DAOFactory.getDefaultDAOFactory().getArbitroDAO();
        
        ArrayList<Jogador> jogadores = jogadorDAO.selecionarJogadoresPorCriterios(
                ckbRestringirNomes.isSelected(), nome,
                ckbRestringirDataNascimento.isSelected(), dataInicio, dataFim,
                ckbRestringirSexo.isSelected(), sexo,
                ckbRestringirNacionalidade.isSelected(), nacionalidade);
        
        ArrayList<Tecnico> tecnicos = tecnicoDAO.selecionarTecnicosPorCriterios(
                ckbRestringirNomes.isSelected(), nome,
                ckbRestringirDataNascimento.isSelected(), dataInicio, dataFim,
                ckbRestringirSexo.isSelected(), sexo,
                ckbRestringirNacionalidade.isSelected(), nacionalidade);
        

        // exibir dados
        ArrayList<Pessoa> colecao = ((ModeloTabelaPessoa)tListagem.getModel()).getColecao();
        colecao.clear();
        colecao.addAll(jogadores);
        colecao.addAll(tecnicos);
        //colecao.addAll(arbitros);
        ((AbstractTableModel)tListagem.getModel()).fireTableDataChanged();
    }//GEN-LAST:event_bPesquisarActionPerformed

    private void tListagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tListagemMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tListagemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisaPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPesquisaPessoa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bPesquisar;
    private javax.swing.JCheckBox ckbRestringirDataNascimento;
    private javax.swing.JCheckBox ckbRestringirNacionalidade;
    private javax.swing.JCheckBox ckbRestringirNomes;
    private javax.swing.JCheckBox ckbRestringirSexo;
    private javax.swing.JComboBox<String> cmbSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tListagem;
    private javax.swing.JTextField tfDataFim;
    private javax.swing.JTextField tfDataInicio;
    private javax.swing.JTextField tfNacionalidade;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables
}
